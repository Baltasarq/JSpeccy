<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jsanchezv.jspeccy</groupId>
    <artifactId>jspeccy</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.1</version>
        <relativePath/>
    </parent>

    <properties>
        <java.version>11</java.version>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Maven plug-in versions -->
        <jaxb2-maven-plugin.version>3.0.0</jaxb2-maven-plugin.version>
        <launch4j-maven-plugin.version>2.1.1</launch4j-maven-plugin.version>
        <spotbugs-maven-plugin.version>4.5.0.0</spotbugs-maven-plugin.version>

        <!-- Third party dependencies' versions -->
        <activation.version>2.0.1</activation.version>
        <jakarta.xml.bind-api.version>3.0.1</jakarta.xml.bind-api.version>
        <jaxb-core.version>3.0.2</jaxb-core.version>
        <jaxb-impl.version>3.0.2</jaxb-impl.version>

        <spring-boot-maven-plugin.finalName>JSpeccy</spring-boot-maven-plugin.finalName>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-project-info-reports-plugin.version>3.1.2</maven-project-info-reports-plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <dependency-check-maven.version>6.5.0</dependency-check-maven.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>jakarta.activation</artifactId>
            <version>${activation.version}</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>${jakarta.xml.bind-api.version}</version><!--$NO-MVN-MAN-VER$-->
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>${jaxb-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb-impl.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <!-- The following import is required to bring in the @Contended annotation into the default -->
                    <!-- module so that we can use it to prevent false memory sharing                            -->
                    <compilerArgs>
                        <arg>--add-exports</arg>
                        <arg>java.base/jdk.internal.vm.annotation=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <!-- Set incremental compilation to false as a workaround the bug in the compiler plugin     -->
                    <!-- that forces the module to always be built even the code hasn't changed                  -->
                    <!-- https://issues.apache.org/jira/browse/MCOMPILER-209                                     -->
                    <!-- https://issues.apache.org/jira/browse/MCOMPILER-205                                     -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>com.evolvedbinary.maven.mojohaus</groupId>
                <artifactId>jaxb-maven-plugin</artifactId>
                <version>${jaxb2-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>jakarta.activation</artifactId>
                        <version>${activation.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>xjc</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <packageName>jakarta.xml.bind.annotation</packageName>
                    <catalog>catalog.xml</catalog>
                    <target>3.0</target>
                    <packageName>configuration</packageName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${project.parent.version}</version>
                <configuration>
                    <executable>true</executable>
                    <jvmArguments>
                        -Xdebug
                        -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8888
                    </jvmArguments>
                    <finalName>${spring-boot-maven-plugin.finalName}</finalName>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <!-- The following import is required to bring in the @Contended annotation into the default -->
                        <!-- module so that we can use it to prevent false memory sharing                            -->
                        <compilerArgs>
                            <arg>--add-exports</arg>
                            <arg>java.base/jdk.internal.vm.annotation=ALL-UNNAMED</arg>
                        </compilerArgs>
                        <!-- Set incremental compilation to false as a workaround the bug in the compiler plugin     -->
                        <!-- that forces the module to always be built even the code hasn't changed                  -->
                        <!-- https://issues.apache.org/jira/browse/MCOMPILER-209                                     -->
                        <!-- https://issues.apache.org/jira/browse/MCOMPILER-205                                     -->
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>owasp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Wrap the M2E pseudo plug-in in a profile to prevent superfluos build warnings due to a known -->
            <!-- Eclipse issue https://bugs.eclipse.org/bugs/show_bug.cgi?id=367870                           -->
            <id>eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- This plugin's configuration is used to store Visual Studio code / Eclipse m2e settings -->
                        <!-- only.  It has no influence on the Maven build itself.                                  -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>com.github.spotbugs</groupId>
                                                <artifactId>spotbugs-maven-plugin</artifactId>
                                                <versionRange>[4.5.0.0,)</versionRange>
                                                <goals>
                                                    <goal>spotbugs</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
            </plugin>
        </plugins>
    </reporting>
</project>
